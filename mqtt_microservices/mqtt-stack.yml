version: '3.8'
services:
  nodered:
    image: nodered/node-red:latest
    deploy:
      placement:
        constraints:
          - node.role == worker
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 300s
      labels:
        - "traefik.enable=true"
        - "traefik.frontend.rule=PathPrefixStrip:/nodered"
        - "traefik.http.routers.api.rule=Host(`nodered.localhost`)"
        - "traefik.port=1880"
        - "traefik.backend=nodered"
        - traefik.http.services.nodered.loadbalancer.server.port=1880
        - tiny.angry.kitten.autodeploy
    environment:
      - TZ=Europe/Oslo
    ports:
      - published: 1880
        target: 1880
      - published: 514
        target: 20514
    volumes:
      - /home/ubuntu/nodered:/data

  syslog:
    image: balabit/syslog-ng:latest
    ports:
      - published: 601
        target: 601
      - published: 514
        target: 514
    configs:
      - source: syslogconfig
        target: /etc/syslog-ng/syslog-ng.conf
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 300s

  kapacitor:
    image: kapacitor:1.5.6
    volumes:
      - /mnt/raidstorage/rpidata/mqtt_microservices/kapacitor/ticks:/var/lib/kapacitor
      - /mnt/raidstorage/rpidata/mqtt_microservices/kapacitor/data:/home/kapacitor
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 300s
      placement:
        constraints:
          - node.role == manager
      labels:
        - tiny.angry.kitten.autodeploy
    configs:
      - source: kapacitorconfig
        target: /etc/kapacitor/kapacitor.conf
    environment:
      KAPACITOR_INFLUXDB_0_URLS_0: http://influx:8086
      KAPACITOR_MQTT_0_ENABLED: "true"
      KAPACITOR_MQTT_0_NAME: "default"
      KAPACITOR_MQTT_0_DEFAULT: "true"
      KAPACITOR_MQTT_0_URL: tcp://mqtt:1883
    labels:
      - "traefik.backend=kapacitorbackend"
      - "traefik.enable=true"
      - "traefik.port=9092"
  mqtt:
    image: eclipse-mosquitto:1.6
    ports:
      - target: 1883
        published: 1883
      - target: 9001
        published: 9001
    configs:
      - source: mqttconfig
        target: mosquitto/config/mosquitto.conf
    #volumes:
      #- mqttconf:/mosquitto/config
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 300s
      placement:
        constraints:
          - node.role == manager
      labels:
        - tiny.angry.kitten.autodeploy

  mongodb:
    image: mongo:4.4.1-bionic
    volumes:
      - /home/ubuntu/mongodb:/data/db
    ports:
      - target: 27017
        published: 27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: defaultpassword
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 300s
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.api.rule=Host(`mongo.localhost`)"

  telegraf:
    image: telegraf:1.16
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    configs:
      - source: telegrafconfig_1
        target: /etc/telegraf/telegraf.conf
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 300s
      labels:
        - tiny.angry.kitten.autodeploy
      placement:
        constraints:
          - node.role == manager

  chronograf:
    image: chronograf:1.8
    ports:
      - target: 8888
        published: 8888
    volumes:
      - /mnt/raidstorage/rpidata/mqtt_microservices/chronograf:/var/lib/chronograf
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 300s
      labels:
        - "traefik.enable=true"
        - "traefik.frontend.rule=PathPrefixStrip:/chronograf"
        - "traefik.http.routers.api.rule=Host(`chronograf.localhost`)"
        - "traefik.port=8888"
        - "traefik.backend=mqtt.chronograf"
        - traefik.http.services.chronograf.loadbalancer.server.port=8888
        - tiny.angry.kitten.autodeploy

  influx:
    image: influxdb:1.7
    ports:
      - target: 8086
        published: 8086
    environment:
      INFLUXDB_DB: sensordata
      INFLUXDB_USER: telegraf
      INFLUXDB_USER_PASSWORD: telegraf
    volumes:
      - /mnt/raidstorage/rpidata/mqtt_microservices/influxdb/db:/var/lib/influxdb
      - /mnt/raidstorage/rpidata/mqtt_microservices/influxdb:/etc/influxdb
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 300s
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.api.rule=Host(`influx.localhost`)"

volumes:
  chronografvolume:
    external: true
  mqttconf:
    external: true
  mongodbdata:
    external: true
  telegrafdata:
    external: true
  mqttinfluxdb:
    external: true
  mqttinfluxconf:
    external: true

configs:
  mqttconfig:
    file: mosquitto/mosquitto.conf
  telegrafconfig_1:
    file: telegraf/telegraf.conf
  kapacitorconfig:
    file: kapacitor/kapacitor.conf
  syslogconfig:
    file: syslog-ng/syslog-ng.conf
