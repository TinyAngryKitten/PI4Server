version: "3.7"

networks:
  proxy:
    external: true

services:
  traefik:
    image: traefik:1.7.23
    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}/{{.Name}}"
    configs:
      - source: traefikconfig
        target: /traefik.toml
    ports:
      - target: 80
        published: 80
      - target: 8080 #dashboard
        published: 8080
      - target: 443
        published: 443
    command:
      #- --api.insecure=true # set to 'false' on production
      - --api=true
      - --api.dashboard=true # see https://docs.traefik.io/v2.0/operations/dashboard/#secure-mode for how to secure the dashboard
      ##- --api.debug=true # enable additional endpoints for debugging and profiling
      #- --log.level=DEBUG # debug while we get it working, for more levels/info see https://docs.traefik.io/observability/logs/
      - --docker=true
      - --docker.swarmMode=true
      - --docker.exposedbydefault=false
      #- --docker.network=proxy
      - --consulcatalog=true
      - --consulcatalog.endpoint=10.0.0.96:8500
      - --consulcatalog.exposedByDefault=true
      #- --entrypoints.web.address=:80
      #- --entrypoints.web-secured.address=:443
      #- --certificatesresolvers.mytlschallenge.acme.httpChallenge.entrypoint=web
      #- --certificatesresolvers.mytlschallenge.acme.email=you@whatever.com
      #- --certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      #- /mnt/raidstorage/rpidata/traefik/traefik.toml:/traefik.toml
      #- /root/configs/traefik/acme.json:/acme.json
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 300s
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.api.rule=Host(`traefik.localhost`)"
        - "traefik.http.routers.api.service=api@internal" # Let the dashboard access the traefik api
        - "traefik.http.services.traefik.loadbalancer.server.port=8080"
  consul:
    image: consul:latest
    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}/{{.Name}}"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 300s
      placement:
        constraints:
          - node.role == manager
    ports:
      - target: 8500
        published: 8500
        mode: host
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.api.rule=Host(`consul.localhost`)"
        - "traefik.http.services.consul.loadbalancer.server.port=8500"
        - tiny.angry.kitten.autodeploy
volumes:
  traefikvolume:
    external: true
configs:
  traefikconfig:
    external: true
